name: Auto-Merge PRs
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled]

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if PR is from GitHub Actions and correct branch
      id: check-pr
      run: |
        PR_AUTHOR=$(jq --raw-output .pull_request.user.login "$GITHUB_EVENT_PATH")
        PR_BRANCH=$(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH")

        echo "PR Author: $PR_AUTHOR"
        echo "PR Branch: $PR_BRANCH"

        if [[ "$PR_AUTHOR" != "github-actions[bot]" ]]; then
          echo "PR is not created by GitHub Actions bot. Exiting."
          exit 1
        fi

        if [[ "$PR_BRANCH" != "update-manifest" ]]; then
          echo "PR is not from the expected branch. Exiting."
          exit 1
        fi
        echo "::set-output name=continue::true"

    - name: Check mergeability and auto-merge PR
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      if: steps.check-pr.outputs.continue == 'true'
      run: |
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        # Get the mergeable state of the PR
        RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                       -H "Accept: application/vnd.github.v3+json" \
                       "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}")
        MERGEABLE=$(echo "$RESPONSE" | jq --raw-output .mergeable)
        MERGEABLE_STATE=$(echo "$RESPONSE" | jq --raw-output .mergeable_state)

        echo "Mergeable: $MERGEABLE"
        echo "Mergeable State: $MERGEABLE_STATE"

        if [[ "$MERGEABLE" == "true" ]]; then
          echo "PR is mergeable. Proceeding to merge."
          curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/merge" \
               -d '{"merge_method":"merge"}'
        else
          echo "PR is not mergeable. Merge state: $MERGEABLE_STATE"
          exit 1
