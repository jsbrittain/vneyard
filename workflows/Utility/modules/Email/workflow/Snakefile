"""Send email

This module sends an email to a list of recipients once the input folder contains the file 'touch', which indicates that the previous steps have been completed. Credentials should be stored and provided in a separate (local) file and connected to this module. Credentials should be provided as a JSON file containing the keys 'username' and 'password' at the top level for SMTP server access, e.g. a file `credentials.json`:
{
    "username": "myusername",
    "password": "mypassword"
}

It is recommended that you do not use your personal email account for this purpose. Consider creating a new email account. For Gmail, you will need to enable 2FA login and create an "app password". Use the app password in your credentials file.

Params:
    SMTP Server (str): The SMTP server to use.
    SMTP Port (int): The port to use for the SMTP server.
    Subject (str): The subject of the email.
    Body (str): The body of the email.
    Recipients (list[str]): A comma separated list of email addresses to send the email to.
"""
configfile: "config/config.yaml"

credentials_path = config["input_namespace"]["credentials"]
credentials_file=config["params"]["Credentials"]["Filename"]

trigger_path=config["input_namespace"]["trigger"]
trigger_file=config["params"]["Trigger"]["Filename"]

outdir=config["output_namespace"]
workflow_srcdir = srcdir('')


def script(name=""):
    """Return the path to a script (supports local and/or remote execution modes)"""
    import os
    from snakemake.remote import AUTO

    try:
        return AUTO.remote('/'.join([workflow_srcdir, "scripts", name]))
    except TypeError:
        import os
        return os.path.join(workflow_srcdir, "scripts", name)


rule email:
    input:
        credentials=f"results/{credentials_path}/{credentials_file}",
        trigger=f"results/{trigger_path}/{trigger_file}",
        scriptfile=script("sendmail.py"),
    output:
        f"results/{outdir}/touch",
    params:
        SMTP_Server=config["params"]["Server"]["SMTP Server"],
        SMTP_Port=config["params"]["Server"]["SMTP Port"],
        Subject=config["params"]["Message"]["Subject"],
        Body=config["params"]["Message"]["Body"],
        Recipients=config["params"]["Message"]["Recipients"],
    conda:
        "envs/conda.yaml",
    shell:
        """
        python {input.scriptfile} \
            --credentials-file="{input.credentials}" \
            --smtp-server="{params.SMTP_Server}" \
            --smtp-port={params.SMTP_Port} \
            --subject="{params.Subject}" \
            --body="{params.Body}" \
            --recipients="{params.Recipients}"
        touch {output}
        """
