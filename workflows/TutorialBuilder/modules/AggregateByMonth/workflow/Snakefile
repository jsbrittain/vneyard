"""Aggregate data by month

This module aggregates data by date. It takes a source file and a list of columns to aggregate. The source file must contain a column with dates.

Params:
    Source (str): The source file to aggregate
    DateColumn (str): The column containing the date
    Columns (list): The columns to aggregate
"""
configfile: "config/config.yaml"
from grapevne_helper import import_grapevne
import json

grapevne = import_grapevne(workflow)
globals().update(vars(grapevne))


rule target:
    input:
        source=input(params("Source")),
        script=script("aggregate.py"),
    output:
        output(params("Source")),
    log:
        log("test.log")
    params:
        datecol=params("DateColumn"),
        cols=json.dumps(params("Columns")).replace("\"", "\'"),
    conda:
        env("conda.yaml")
    shell:
        """
        python {input.script} \
            --source="{input.source}" \
            --dest="{output}" \
            --datecol="{params.datecol}" \
            --cols="{params.cols}"
        """

rule _test:
    input:
        infile = input(params("Source")),
        outfile = output(params("Source")),
    run:
        with open(input.infile, "r") as f:
            lines = f.readlines()
        assert len(lines) > 13  # day reporting
        with open(input.outfile, "r") as f:
            lines = f.readlines()
        assert len(lines) == 13  # 12 months + header
